generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model container {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  status       String     @db.VarChar(255)
  warehouse_id String?    @db.Uuid
  created_at   DateTime   @default(now()) @db.Timestamp(6)
  updated_at   DateTime   @default(now()) @db.Timestamp(6)
  warehouse    warehouse? @relation(fields: [warehouse_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  request      request[]
}

model request {
  id           String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  customer_id  String?    @db.Uuid
  warehouse_id String?    @db.Uuid
  container_id String?    @db.Uuid
  status       String     @db.VarChar(255)
  created_at   DateTime   @default(now()) @db.Timestamp(6)
  updated_at   DateTime   @default(now()) @db.Timestamp(6)
  container    container? @relation(fields: [container_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user         user?      @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  warehouse    warehouse? @relation(fields: [warehouse_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String      @unique @db.VarChar(255)
  firstName   String?     @db.VarChar(255)
  lastName    String?     @db.VarChar(255)
  roq_user_id String      @db.VarChar(255)
  tenant_id   String      @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  request     request[]
  warehouse   warehouse[]
}

model warehouse {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?     @db.VarChar(255)
  image       String?     @db.VarChar(255)
  name        String      @db.VarChar(255)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @default(now()) @db.Timestamp(6)
  user_id     String      @db.Uuid
  tenant_id   String      @db.VarChar(255)
  container   container[]
  request     request[]
  user        user        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
